version: '3.0'
services:
  node-serve:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.dev
    # image: node-serve-1.0
    container_name: node-serve
    ports:
      - 5050:5050
    volumes:
      - "${DATA_PATH:-./data}/node-serve:/app"
    networks:
      - app-network
    depends_on:
      - mysql
      - redis

  mysql:
    container_name: "app-mysql"
    image: "mysql:8.0"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
      # MYSQL_USER: "root"
      # MYSQL_PASSWORD: "123456"
      MYSQL_DATABASE: "design_project"
    ports:
      - 3306:3306
    volumes:
      - "${DATA_PATH:-./data}/mysql/db:/var/lib/mysql"
      # - "${DATA_PATH:-./data}/mysql/conf:/etc/mysql"
      - "${DATA_PATH:-./data}/mysql/log:/var/log/mysql"
    networks:
      - app-network

  redis:
    container_name: "app-redis"
    image: "redis:latest"
    restart: always
    ports:
      - 6379:6379
    volumes:
      - "${DATA_PATH:-./data}/redis/data:/data"
    networks:
      - app-network

  nginx:
    container_name: "app-nginx"
    image: "nginx:1.20"
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - "${DATA_PATH:-./data}/nginx/conf:/etc/nginx/conf.d"
      - "${DATA_PATH:-./data}/nginx/html:/usr/share/nginx/html"
      - "${DATA_PATH:-./data}/nginx/logs:/var/log/nginx"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge